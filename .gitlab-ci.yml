stages:
  - log-commits
  - build-graal
  - micronaut
  - test


#  _                                                 _ _
# | | ___   __ _        ___ ___  _ __ ___  _ __ ___ (_) |_ ___
# | |/ _ \ / _` |_____ / __/ _ \| '_ ` _ \| '_ ` _ \| | __/ __|
# | | (_) | (_| |_____| (_| (_) | | | | | | | | | | | | |_\__ \
# |_|\___/ \__, |      \___\___/|_| |_| |_|_| |_| |_|_|\__|___/
#          |___/
log-commits:
  image: alpine:3.8
  stage: log-commits
  script:
    - ./log-commits.sh


#  _           _ _     _                             _
# | |__  _   _(_) | __| |       __ _ _ __ __ _  __ _| |
# | '_ \| | | | | |/ _` |_____ / _` | '__/ _` |/ _` | |
# | |_) | |_| | | | (_| |_____| (_| | | | (_| | (_| | |
# |_.__/ \__,_|_|_|\__,_|      \__, |_|  \__,_|\__,_|_|
#                              |___/
build-graal:
  stage: build-graal
  #cache:
  #  key: '20190405'
  #  paths:
  #    - $CI_PROJECT_DIR/graal/graal/vm
  #    - $CI_PROJECT_DIR/graal/openjdk1.8.0_202-jvmci-0.59
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_PROJECT_DIR/graal/graal/vm
      - $CI_PROJECT_DIR/graal/openjdk1.8.0_202-jvmci-0.59
  script:
  #  - if [ -d $CI_PROJECT_DIR/graal ]; then exit 0; fi
    - ./build-graal.sh


#            _                                  _
#  _ __ ___ (_) ___ _ __ ___  _ __   __ _ _   _| |_
# | '_ ` _ \| |/ __| '__/ _ \| '_ \ / _` | | | | __|
# | | | | | | | (__| | | (_) | | | | (_| | |_| | |_
# |_| |_| |_|_|\___|_|  \___/|_| |_|\__,_|\__,_|\__|
#
micronaut:build-basic-app:
  stage: micronaut
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_PROJECT_DIR/micronaut-basic-app/basic-app
  allow_failure: true
  script:
    - ./build-micronaut-basic-app.sh

micronaut:build-consul-http-client:
  stage: micronaut
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_PROJECT_DIR/micronaut-service-discovery-consul-http-client/service-discovery
  allow_failure: true
  script:
    - ./build-micronaut-consul-http-client.sh

micronaut:build-zipkin-graal:
  stage: micronaut
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_PROJECT_DIR/micronaut-zipkin-graal/zipkin-graal
  allow_failure: true
  script:
    - ./build-micronaut-zipkin-graal.sh

micronaut:build-function-graal:
  stage: micronaut
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_PROJECT_DIR/micronaut-function-graal/function-graal
  allow_failure: true
  script:
    - ./build-micronaut-function-graal.sh

.micronaut:build-rabbitmq-graal:
  stage: micronaut
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_PROJECT_DIR/micronaut-rabbitmq-graal/graal-rabbitmq
  allow_failure: true
  script:
    - ./build-micronaut-rabbitmq-graal.sh

micronaut:build-management-graal:
  stage: micronaut
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_PROJECT_DIR/micronaut-management-graal/management-graal
  allow_failure: true
  script:
    - ./build-micronaut-management-graal.sh

micronaut:build-views-graal:
  stage: micronaut
  artifacts:
    expire_in: 1 hour
    paths:
      - $CI_PROJECT_DIR/micronaut-views-graal/views-graal
  allow_failure: true
  script:
    - ./build-micronaut-views-graal.sh


#  _            _
# | |_ ___  ___| |_
# | __/ _ \/ __| __|
# | ||  __/\__ \ |_
#  \__\___||___/\__|
#
micronaut:test-basic-app:
  stage: test
  image: frolvlad/alpine-glibc
  dependencies:
    - micronaut:build-basic-app
  script:
    - apk add curl

    - $CI_PROJECT_DIR/micronaut-basic-app/basic-app &
    - sleep 3

    - RESPONSE=$(curl -s localhost:8080/hello/Micronaut)
    - EXPECTED_RESPONSE='{"msg":"Hello Micronaut"}'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

micronaut:test-consul-http-client:
  stage: test
  image: frolvlad/alpine-glibc
  services:
    - name: consul:1.4.0
      alias: consulhost
  dependencies:
    - micronaut:build-consul-http-client
  script:
    - apk add curl

    - MICRONAUT_CONFIG_FILES=$CI_PROJECT_DIR/application-consul-http-client.yml $CI_PROJECT_DIR/micronaut-service-discovery-consul-http-client/service-discovery &
    - sleep 3

    - RESPONSE=$(curl -s localhost:8080/hello/Micronaut)
    - EXPECTED_RESPONSE='Hello Micronaut'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/api/hello/Micronaut)
    - EXPECTED_RESPONSE='Hello Micronaut'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

micronaut:test-zipkin-graal:
  stage: test
  image: frolvlad/alpine-glibc
  services:
    - name: openzipkin/zipkin:2.11.12
      alias: openzipkin
  dependencies:
    - micronaut:build-zipkin-graal
  script:
    - apk add curl

    - MICRONAUT_CONFIG_FILES=$CI_PROJECT_DIR/application-micronaut-zipkin-graal.yml $CI_PROJECT_DIR/micronaut-zipkin-graal/zipkin-graal &
    - sleep 3

    - curl -s localhost:8080/config
    - curl -s http://openzipkin:9411/zipkin/api/v2/services
    - curl -s http://openzipkin:9411/zipkin/api/v2/spans?serviceName=zipkin-graal

    - RESPONSE=$(curl -s localhost:8080/hello/Micronaut)
    - EXPECTED_RESPONSE='Hello Micronaut'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

micronaut:test-function-graal:
  stage: test
  image: frolvlad/alpine-glibc
  dependencies:
    - micronaut:build-function-graal
  script:
    - export MICRONAUT_FUNCTION_NAME=greeting
    - $(echo 'Micronaut' | $CI_PROJECT_DIR/micronaut-function-graal/function-graal > RESPONSE.txt)
    - RESPONSE=`cat RESPONSE.txt | tail -n 1`
    - EXPECTED_RESPONSE='Hello Micronaut'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

    - export MICRONAUT_FUNCTION_NAME=greeting-pojo
    - $(echo '{"name":"Micronaut"}' | $CI_PROJECT_DIR/micronaut-function-graal/function-graal > RESPONSE.txt)
    - RESPONSE=`cat RESPONSE.txt | tail -n 1`
    - EXPECTED_RESPONSE='{"msg":"Hello Micronaut"}'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

.micronaut:test-rabbitmq-graal:
  stage: test
  image: frolvlad/alpine-glibc
  services:
    - name: rabbitmq:3.7.11
      alias: rabbitmqhost
  dependencies:
    - micronaut:build-rabbitmq-graal
  script:
    - apk add curl jq

    - MICRONAUT_CONFIG_FILES=$CI_PROJECT_DIR/application-micronaut-rabbitmq-graal.yml $CI_PROJECT_DIR/micronaut-rabbitmq-graal/graal-rabbitmq &
    - sleep 3

    - RESPONSE=$(curl -s localhost:8080/books-fireandforget/1491950358)
    - EXPECTED_RESPONSE='{"isbn":"1491950358","name":"Building Microservices"}'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/analytics | jq '.[0] | .count')
    - EXPECTED_RESPONSE='1'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi
    - RESPONSE=$(curl -s localhost:8080/analytics | jq -r '.[0] | .bookIsbn')
    - EXPECTED_RESPONSE='1491950358'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/books-rpc)
    - EXPECTED_RESPONSE='[{"name":"Building Microservices"}]'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

micronaut:test-management-graal:
  stage: test
  image: frolvlad/alpine-glibc
  dependencies:
    - micronaut:build-management-graal
  script:
    - apk add curl jq

    - $CI_PROJECT_DIR/micronaut-management-graal/management-graal &
    - sleep 3

    - RESPONSE=$(curl -s localhost:8080/hello/Micronaut)
    - EXPECTED_RESPONSE='Hello Micronaut'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/health)
    - EXPECTED_RESPONSE='{"status":"UP"}'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/info)
    - EXPECTED_RESPONSE='{}'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/metrics | jq '.names | length')
    - EXPECTED_RESPONSE='20'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/loggers | jq '.levels | length')
    - EXPECTED_RESPONSE='8'
    - if [ "$RESPONSE" != "$EXPECTED_RESPONSE" ]; then echo $RESPONSE && exit 1; fi

micronaut:test-views-graal:
  stage: test
  image: frolvlad/alpine-glibc
  dependencies:
    - micronaut:build-views-graal
  script:
    - apk add curl

    - $CI_PROJECT_DIR/micronaut-views-graal/views-graal &
    - sleep 3

    - RESPONSE=$(curl -s localhost:8080/)
    - EXPECTED_RESPONSE_CONTAINS='<img src="images/micronaut_mini_copy_tm.svg" width="400"/>'
    - if [ "$RESPONSE" == "${RESPONSE%"$EXPECTED_RESPONSE_CONTAINS"*}" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/folder1/link1.html)
    - EXPECTED_RESPONSE_CONTAINS='<a href="https://micronaut.io/documentation.html">Micronaut documentation</a>'
    - if [ "$RESPONSE" == "${RESPONSE%"$EXPECTED_RESPONSE_CONTAINS"*}" ]; then echo $RESPONSE && exit 1; fi

    - RESPONSE=$(curl -s localhost:8080/views)
    - EXPECTED_RESPONSE_CONTAINS="<span>Iv√°n</span>"
    - if [ "$RESPONSE" == "${RESPONSE%"$EXPECTED_RESPONSE_CONTAINS"*}" ]; then echo $RESPONSE && exit 1; fi
